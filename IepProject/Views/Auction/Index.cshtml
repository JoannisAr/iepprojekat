@model IepProject0.Models.AuctionViewModelForm
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h3> Auctions </h3>
<hr />
@{
    if (Model.Auctions.Count == 0)
    {
        <h3>We could not find any auctions.  </h3>
    }
    if (ViewBag.message != null)
    {
        <h2>ViewBag.message</h2>
    }
}

<hr />

<div class="row">
    @foreach (var item in Model.Auctions)
    {

        if (item.IMG != null)
        {
            //OK POPRAVI ZAGRADE
            string imreBase64Data = Convert.ToBase64String(item.IMG);
            string imgSrc = string.Format("data:image/png;base64,{0}", imreBase64Data);

            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card h-100">
                    <a href="#"><img class="card-img-top" src="@imgSrc" alt="" height="200" width="250"></a>
                    <div class="card-body">
                        <h4 class="card-title">
                            <a href="/Auction/Details/@item.Id">@item.Name</a>
                        </h4>
                        <p class="card-text" id="fullname @item.Id">@item.FullName</p>
                        <p class="card-text" id="curprice @item.Id">@item.CurrentPrice</p>
                        <p class="card-text" id="status @item.Id">State: @item.Status</p>
                        @if (item.Status == "OPENED")
                        {
                            <p class="card-text" id="timer @item.Id"></p>
                        }

                    </div>
                    @using (Html.BeginForm("Bid", "User", FormMethod.Post, new { id = "form " + item.Id }))
                    {
                        @Html.AntiForgeryToken()
                        if (item.Status == "OPENED" && Session["User"] != null)
                        {
                            <input type="hidden" name="idAuction" value="@item.Id" id="auctionId @item.Id" />
                            <input type="number" name="tokensNum" value="@(item.CurrentPrice + 1)" min="@(item.CurrentPrice + 1)" id="tokensNum @item.Id" class="form-control" />
                            <input type="hidden" name="curAuction" value="@item.Currency" id="auctiionCur @item.Id" />
                            <button class="btn btn-primary" type="submit" id="bidButton @item.Id" onclick="">Bid Now</button>
                        }
                    }
                </div>
            </div>
        }
    }
</div>
@if (Model.Auctions.PageSize == 0)
{
    <h2> There is no auctions right now! </h2>
}
Page @(Model.Auctions.PageCount < Model.Auctions.PageNumber ? 0 : Model.Auctions.PageNumber) of @Model.Auctions.PageCount

@Html.PagedListPager(Model.Auctions, page => Url.Action("Index",new IepProject0.Models.AuctionViewModelForm {
    Name = Model.Name, LowPrice = Model.LowPrice, HighPrice = Model.HighPrice,
    List=Model.List, Page = page}))

@section scripts {
    <script>
        $.connection.hub.start();

        $.connection.auctionHub.client.AuctionUpdate = function (idAuction, tokensNum, fullName) {
            document.getElementById("fullname " + idAuction).innerHTML = fullName;
            document.getElementById("curprice " + idAuction).innerHTML = tokensNum;
            var defaultTokenNum = document.getElementById("form " + idAuction).elements["tokensNum " + idAuction];
            defaultTokenNum.value = "" + (tokensNum + 1);
            defaultTokenNum.min = "" + (tokensNum + 1);
        }

        //SOS PITANJE DAL TREBA POSTO PRETRAGA SAMA BI INICIRALA TO.?
        $.connection.auctionHub.client.CloseAuction = function (auctionID) {
            document.getElementById("state " + auctionID).innerHTML = "COMPLETED";
            document.getElementById("timer " + auctionID).innerHTML = "ENDED";
            document.getElementById("bidButton " + auctionID).className += " disabled";
            document.getElementById("bidButton " + auctionID).disabled = true;
        }


        function timer(time, id) {
            var x = setInterval(function () {
                var localTime = new Date();
                var now = new Date(localTime.getUTCFullYear(), localTime.getUTCMonth(), localTime.getUTCDate(),
                    localTime.getUTCHours(), localTime.getUTCMinutes(), localTime.getUTCSeconds(), localTime.getUTCMilliseconds());
                var distance = time.getTime() - now.getTime();
                var days = Math.floor(distance / (1000 * 60 * 60 * 24));
                var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                var seconds = Math.floor((distance % (1000 * 60)) / 1000);
                document.getElementById("timer " + id).innerHTML = days + "d " + hours + "h "
                    + minutes + "m " + seconds + "s ";
                if (distance < 0) {
                    clearInterval(x);
                    document.getElementById("timer " + id).innerHTML = "";
                    document.getElementById("status " + id).innerHTML = "State: COMPLETED"
                    @if (Session["User"] != null) {
                        <text>
                            document.getElementById("bidButton " + id).className += " disabled";
                            document.getElementById("bidButton " + id).disabled = true;
                        </text>
                    }
                    $.connection.auctionHub.server.closeAuction(id);
                }
            }, 1000);
        }

        @foreach(var item in Model.Auctions)
        {
            if (item.Status == "OPENED")
            {
                <text>
                    var year = @(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Year);
                    var month =@(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Month);
                    var day = @(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Day);
                    var hour = @(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Hour);
                    var minute = @(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Minute);
                    var second = @(((DateTime)item.OpenedOn).AddSeconds(item.AuctionTime).Second);
                    var time = new Date(year,month-1,day,hour,minute,second,0);
                    timer(time,@item.Id);
             </text>
            }
        }
    </script>
}
